name: Release Creation

on: 
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    # get part of the tag after the `v`
    - name: Extract tag version number
      id: get_version
      uses: battila7/get-version-action@v2

    - name: Echo tag output
      run: echo ${{ steps.get_version.outputs.version-without-v }}

    # Substitute the Manifest and Download URLs in the module.json
    - name: Substitute Manifest and Download Links For Versioned Ones
      id: sub_manifest_link_version
      uses: microsoft/variable-substitution@v1
      with:
        files: 'module.json'
      env:
        version: ${{steps.get_version.outputs.version-without-v}}
        url: https://github.com/${{github.repository}}
        manifest: https://github.com/${{github.repository}}/releases/latest/download/module.json
        download: https://github.com/${{github.repository}}/releases/download/${{steps.get_version.outputs.version-without-v}}/module.zip

    - name: Commit changed manifest
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        # Optional but recommended
        # Defaults to "Apply automatic changes"
        commit_message: release version ${{ steps.get_version.outputs.version-without-v }}

        # Optional branch name where commit should be pushed to
        # Defaults to the current branch
        branch: ${{ github.event.release.target_commitish }}

    - name: Checkout new commit
      run: git checkout HEAD^

    # Create a zip file with all files required by the module to add to the release
    - name: Create download zip
      run: zip -r ./module.zip module.json README.md icons/ lang/ modules/ styles/ templates/

    # Create a release for this specific version
    - name: Update Release with Files
      id: create_version_release
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        name: ${{ github.event.release.name }}
        draft: ${{ github.event.release.draft }}
        prerelease: ${{ github.event.release.prerelease }}
        commit: HEAD^
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: './module.json, ./module.zip'
        tag: ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
